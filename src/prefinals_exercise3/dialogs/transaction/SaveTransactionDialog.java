/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package prefinals_exercise3.dialogs.transaction;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Arrays;
import java.util.List;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

import prefinals_exercise3.SQLConfig;

public class SaveTransactionDialog extends javax.swing.JDialog {

    public SaveTransactionDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        loadItems();
        loadTransactionTypes();
    }
    
    private void loadItems() {
        try (Connection con = getConnection();
             Statement stmt = con.createStatement();
             ResultSet rs = stmt.executeQuery("SELECT item_id, item_name FROM Items")) {

            DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
            while (rs.next()) {
                model.addElement(rs.getString("item_name"));
            }
            cmbItem.setModel(model);
        } catch (SQLException | ClassNotFoundException e) {
            showError(e);
        }
    }
    
    private void loadTransactionTypes() {
//        List<String> transactionTypes = Arrays.asList("Sale", "Purchase", "Return", "Restock");
        List<String> transactionTypes = Arrays.asList("Stock in", "Stock out");
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(transactionTypes.toArray(new String[0]));
        cmbTransactionType.setModel(model);
    }
    
    private boolean updateItemQuantity(String itemName, int value, String type) {
        int oldValue = 0;
        try (Connection con = getConnection();
             PreparedStatement selectStmt = con.prepareStatement("SELECT quantity_on_hand FROM Items WHERE item_name = ?")) {
            selectStmt.setString(1, itemName);
            ResultSet rs = selectStmt.executeQuery();
            
            if (rs.next()) {
                oldValue = rs.getInt("quantity_on_hand");
            }
            
            int newValue = 0;
            if (type.equalsIgnoreCase("Stock in")) {
                newValue = oldValue + value;
            } else if (type.equalsIgnoreCase("Stock out")) {
                newValue = oldValue - value;
                if (newValue < 0) {
                    return false;
                }
            }
            
            // Update the new quantity in the database
            try (PreparedStatement updateStmt = con.prepareStatement("UPDATE Items SET quantity_on_hand = ? WHERE item_name = ?")) {
                updateStmt.setInt(1, newValue);
                updateStmt.setString(2, itemName);
                updateStmt.executeUpdate();
            }
            
        } catch (SQLException | ClassNotFoundException e) {
            showError(e);
            return false;
        }
        
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel3 = new javax.swing.JLabel();
        Container = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cancelButton1 = new javax.swing.JButton();
        saveNewButton = new javax.swing.JButton();
        offsetR = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        notesField = new javax.swing.JTextArea();
        cmbItem = new javax.swing.JComboBox<>();
        quantityField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmbTransactionType = new javax.swing.JComboBox<>();

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText("Category Name:");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(410, 460));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Container.setBackground(new java.awt.Color(255, 255, 255));
        Container.setMaximumSize(new java.awt.Dimension(410, 840));
        Container.setMinimumSize(new java.awt.Dimension(410, 840));
        Container.setPreferredSize(new java.awt.Dimension(410, 460));
        Container.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 153));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("TRANSACTION");
        jLabel4.setMaximumSize(new java.awt.Dimension(410, 48));
        jLabel4.setMinimumSize(new java.awt.Dimension(410, 48));
        jLabel4.setPreferredSize(new java.awt.Dimension(410, 48));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(50, 0, 50, 0);
        Container.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 153));
        jLabel5.setText("Item:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 0);
        Container.add(jLabel5, gridBagConstraints);

        cancelButton1.setBackground(new java.awt.Color(230, 230, 230));
        cancelButton1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cancelButton1.setForeground(new java.awt.Color(51, 51, 51));
        cancelButton1.setText("Cancel");
        cancelButton1.setBorderPainted(false);
        cancelButton1.setMaximumSize(new java.awt.Dimension(160, 32));
        cancelButton1.setMinimumSize(new java.awt.Dimension(160, 32));
        cancelButton1.setPreferredSize(new java.awt.Dimension(160, 32));
        cancelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(80, 42, 80, 5);
        Container.add(cancelButton1, gridBagConstraints);

        saveNewButton.setBackground(new java.awt.Color(0, 153, 153));
        saveNewButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        saveNewButton.setForeground(new java.awt.Color(255, 255, 255));
        saveNewButton.setText("Save New");
        saveNewButton.setBorderPainted(false);
        saveNewButton.setMaximumSize(new java.awt.Dimension(160, 32));
        saveNewButton.setMinimumSize(new java.awt.Dimension(160, 32));
        saveNewButton.setPreferredSize(new java.awt.Dimension(160, 32));
        saveNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveNewButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(80, 5, 80, 42);
        Container.add(saveNewButton, gridBagConstraints);

        javax.swing.GroupLayout offsetRLayout = new javax.swing.GroupLayout(offsetR);
        offsetR.setLayout(offsetRLayout);
        offsetRLayout.setHorizontalGroup(
            offsetRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        offsetRLayout.setVerticalGroup(
            offsetRLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        Container.add(offsetR, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 153));
        jLabel6.setText("Transaction Type:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 50, 0, 0);
        Container.add(jLabel6, gridBagConstraints);

        jScrollPane1.setMaximumSize(new java.awt.Dimension(320, 86));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(320, 86));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(320, 86));

        notesField.setColumns(20);
        notesField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        notesField.setLineWrap(true);
        notesField.setRows(5);
        notesField.setTabSize(20);
        notesField.setWrapStyleWord(true);
        jScrollPane1.setViewportView(notesField);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        Container.add(jScrollPane1, gridBagConstraints);

        cmbItem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmbItem.setMaximumSize(new java.awt.Dimension(320, 32));
        cmbItem.setMinimumSize(new java.awt.Dimension(320, 32));
        cmbItem.setPreferredSize(new java.awt.Dimension(320, 32));
        cmbItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbItemActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        Container.add(cmbItem, gridBagConstraints);

        quantityField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        quantityField.setForeground(new java.awt.Color(51, 51, 51));
        quantityField.setMaximumSize(new java.awt.Dimension(320, 32));
        quantityField.setMinimumSize(new java.awt.Dimension(320, 32));
        quantityField.setPreferredSize(new java.awt.Dimension(320, 32));
        quantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityFieldActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        Container.add(quantityField, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 153));
        jLabel7.setText("Quantity:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 50, 0, 0);
        Container.add(jLabel7, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 153));
        jLabel8.setText("Notes:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 50, 0, 0);
        Container.add(jLabel8, gridBagConstraints);

        cmbTransactionType.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmbTransactionType.setMaximumSize(new java.awt.Dimension(320, 32));
        cmbTransactionType.setMinimumSize(new java.awt.Dimension(320, 32));
        cmbTransactionType.setPreferredSize(new java.awt.Dimension(320, 32));
        cmbTransactionType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTransactionTypeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        Container.add(cmbTransactionType, gridBagConstraints);

        getContentPane().add(Container, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 810));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButton1ActionPerformed

    private void saveNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveNewButtonActionPerformed
        String selectedItem = (String) cmbItem.getSelectedItem();
        String quantityStr = quantityField.getText().trim();
        String transactionType = (String) cmbTransactionType.getSelectedItem();
        String notes = notesField.getText().trim();
        LocalDateTime now = LocalDateTime.now();
        String formattedDate = now.format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"));

        if (selectedItem == null || quantityStr.isEmpty() || transactionType == null) {
            JOptionPane.showMessageDialog(this, "Please fill out all the necessary fields.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int quantity = Integer.parseInt(quantityStr);

            try (Connection con = getConnection()) {
                con.setAutoCommit(false);

                if (!updateItemQuantity(selectedItem, quantity, transactionType)) {
                    JOptionPane.showMessageDialog(this, "Insufficient stock for the transaction.", "Error", JOptionPane.ERROR_MESSAGE);
                    con.rollback();
                    return;
                }

                try (PreparedStatement pstmt = con.prepareStatement("INSERT INTO Transactions (item_id, transaction_date, quantity, transaction_type, notes) VALUES ((SELECT item_id FROM Items WHERE item_name = ?), ?, ?, ?, ?)")) {
                    pstmt.setString(1, selectedItem);
                    pstmt.setString(2, formattedDate);
                    pstmt.setInt(3, quantity);
                    pstmt.setString(4, transactionType);
                    pstmt.setString(5, notes);
                    pstmt.executeUpdate();
                }

                con.commit(); // Commit transaction
                dispose();
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid number for quantity.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException | ClassNotFoundException e) {
            showError(e);
        }
    }//GEN-LAST:event_saveNewButtonActionPerformed

    private void quantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityFieldActionPerformed

    private void cmbItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbItemActionPerformed

    private void cmbTransactionTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTransactionTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbTransactionTypeActionPerformed

    private Connection getConnection() throws SQLException, ClassNotFoundException {
        SQLConfig sql = new SQLConfig();
        String DB_URL = sql.getDbUrl();
        String DB_USER = sql.getDbUser();
        String DB_PASSWORD = sql.getDbPassword();
        Class.forName("com.mysql.cj.jdbc.Driver");
        return DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
    }

    private void showError(Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SaveTransactionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SaveTransactionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SaveTransactionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SaveTransactionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SaveTransactionDialog dialog = new SaveTransactionDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Container;
    private javax.swing.JButton cancelButton1;
    private javax.swing.JComboBox<String> cmbItem;
    private javax.swing.JComboBox<String> cmbTransactionType;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea notesField;
    private javax.swing.JPanel offsetR;
    private javax.swing.JTextField quantityField;
    private javax.swing.JButton saveNewButton;
    // End of variables declaration//GEN-END:variables
}